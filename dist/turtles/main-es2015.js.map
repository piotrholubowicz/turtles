{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/color-picker-dialog/color-picker-dialog.component.ts","./src/app/color-picker-dialog/color-picker-dialog.component.html","./src/app/game-engine.ts","./src/app/game-over/game-over.component.ts","./src/app/game-over/game-over.component.html","./src/app/game.service.ts","./src/app/game.ts","./src/app/games/games.component.ts","./src/app/games/games.component.html","./src/app/image.service.ts","./src/app/in-memory-data.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GamesComponent } from './games/games.component';\nimport { BoardComponent } from './board/board.component';\nimport { PlayerComponent } from './player/player.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/games', pathMatch: 'full' },\n  { path: 'games', component: GamesComponent },\n  { path: 'board/:id', component: BoardComponent },\n  { path: 'hand/:id/:player', component: PlayerComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Turtles';\n\n  constructor() {}\n}\n","<router-outlet></router-outlet>\n\n<a href=\"http://www.freepik.com\" style=\"color: #eeeeee; font-size: 8pt; float: right\"\n  >Designed by rawpixel.com / Freepik</a\n>\n","import { NgModule } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { GameService } from './game.service';\nimport { GamesComponent } from './games/games.component';\nimport { BoardComponent } from './board/board.component';\nimport { PlayerComponent } from './player/player.component';\nimport { CardComponent } from './card/card.component';\nimport { ColorPickerDialogComponent } from './color-picker-dialog/color-picker-dialog.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ImageService } from './image.service';\nimport { GameOverComponent } from './game-over/game-over.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  declarations: [\n    AppComponent,\n    GamesComponent,\n    BoardComponent,\n    PlayerComponent,\n    CardComponent,\n    ColorPickerDialogComponent,\n    PageNotFoundComponent,\n    GameOverComponent,\n  ],\n  bootstrap: [AppComponent],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/turtles/' }, GameService, InMemoryDataService, ImageService],\n  entryComponents: [ColorPickerDialogComponent, GameOverComponent],\n})\nexport class AppModule {}\n","import { Observable } from 'rxjs';\nimport { switchMap, catchError, tap } from 'rxjs/operators';\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Game, Color, Card, ALL_CARDS } from '../game';\nimport { GameEngine } from '../game-engine';\nimport { GameService } from '../game.service';\nimport { ImageService } from '../image.service';\nimport { GameOverComponent } from '../game-over/game-over.component';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent implements OnInit {\n  game$: Observable<Game>;\n  allColors: Color[] = [Color.RED, Color.YELLOW, Color.BLUE, Color.PURPLE, Color.GREEN];\n  Color = Color;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: GameService,\n    private imageService: ImageService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    this.game$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        return this.service.getGame(+params.get('id')).pipe(\n          tap((game) => {\n            if (game.winner) {\n              this.gameOver(game).then((result) => {\n                if (result === 'onemore') {\n                  console.log('once more!');\n                  this.service\n                    .addGame(GameEngine.createGame(GameEngine.shuffle([...game.players])), game)\n                    .subscribe((newGame) => {\n                      this.router.navigate(['/board', newGame.id]);\n                    });\n                }\n              });\n            }\n          }),\n          catchError((err) => {\n            if (err.status === 404) {\n              this.router.navigate(['/games', { message: 'Nie ma takiej gry!' }]);\n            }\n            console.log(`Error ${err.status}`);\n            return this.game$;\n          })\n        );\n      })\n    );\n  }\n\n  turtleSrc(color: Color): string {\n    return this.imageService.getTurtlePath(color);\n  }\n\n  left(game: Game, color: Color): string {\n    const x = [80, 76, 67, 58, 50, 41, 32, 25, 15, 8];\n    const fieldAndPos = GameEngine.findPosition(game, color);\n\n    if (fieldAndPos[0] === 0) {\n      return `${x[0] + 1.7 * color}%`;\n    }\n\n    return `${x[fieldAndPos[0]]}%`;\n  }\n\n  top(game: Game, color: Color): string {\n    const y = [20, 50, 57, 51, 34, 27, 40, 57, 49, 35];\n    const fieldAndPos = GameEngine.findPosition(game, color);\n    const field = fieldAndPos[0];\n    const pos = fieldAndPos[1];\n\n    if (field === 0) {\n      return `${y[0] + 15 * color}%`;\n    }\n\n    // height of a meeple is 5%\n    return `${y[field] - pos * 5}%`;\n  }\n\n  zindex(game: Game, color: Color): string {\n    const z = [0, 1, 2, 3, 2, 1, 2, 3, 2, 1];\n    const fieldAndPos = GameEngine.findPosition(game, color);\n\n    if (fieldAndPos[0] === 0) {\n      return `${color}`;\n    }\n\n    return `${10 * z[fieldAndPos[0]] + fieldAndPos[1]}`;\n  }\n\n  gameOver(game: Game): Promise<any> {\n    const modalRef = this.modalService.open(GameOverComponent);\n    modalRef.componentInstance.winner = game.winner;\n    modalRef.componentInstance.color = game.colors[game.winner];\n    return modalRef.result;\n  }\n\n  cardBackSrc(): string {\n    return this.imageService.getMoveCardPath();\n  }\n\n  cardFrontSrc(cardIdx: number): string {\n    return this.imageService.getMoveCardPath(ALL_CARDS[cardIdx]);\n  }\n\n  leftMoveCard(i: number): string {\n    return `${20 + i}%`;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <a href=\"/\"><img src=\"/assets/img/title.png\" /></a>\n    </div>\n  </div>\n  <div *ngIf=\"game$ | async as game\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"players\">\n          <span *ngFor=\"let p of game.players\" [ngClass]=\"{ active_player: game.players[game.active_player] == p }\"\n            >{{ p }},\n          </span>\n        </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <img class=\"board\" src=\"/assets/img/board.png\" />\n        <img\n          *ngFor=\"let c of allColors\"\n          class=\"meeple\"\n          src=\"{{ turtleSrc(c) }}\"\n          [style.left]=\"left(game, c)\"\n          [style.top]=\"top(game, c)\"\n          [style.z-index]=\"zindex(game, c)\"\n        />\n      </div>\n    </div>\n    <div class=\"row card-row\">\n      <div class=\"col-6\">\n        <img\n          *ngFor=\"let card of game.deck; let i = index\"\n          class=\"movecard\"\n          src=\"{{ cardBackSrc() }}\"\n          [style.left]=\"leftMoveCard(i)\"\n        />\n      </div>\n      <div class=\"col-6\">\n        <img\n          *ngFor=\"let card of game.discarded; let i = index\"\n          class=\"movecard\"\n          src=\"{{ cardFrontSrc(card) }}\"\n          [style.left]=\"leftMoveCard(i)\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <p>Kliknij na swoje imię, aby zobaczyć swoje karty:</p>\n        <a\n          *ngFor=\"let player of game.players\"\n          type=\"button\"\n          class=\"btn btn-secondary btn-player\"\n          [routerLink]=\"['/hand', game.id, player]\"\n        >\n          {{ player }}\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ImageService } from '../image.service';\nimport { Game, Card, Color, ALL_CARDS } from '../game';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n  @Input() game: Game;\n  @Input() cardIdx: number;\n  @Input() enabled: boolean;\n  @Output() played = new EventEmitter<{ cardIdx: number; game: Game }>();\n  Color = Color;\n\n  constructor(private modalService: NgbModal, private imageService: ImageService) {}\n\n  ngOnInit() {}\n\n  card(): Card {\n    return ALL_CARDS[this.cardIdx];\n  }\n\n  play(): void {\n    if (this.enabled) {\n      this.played.emit({ cardIdx: this.cardIdx, game: this.game });\n    }\n  }\n\n  src(): string {\n    return this.imageService.getMoveCardPath(ALL_CARDS[this.cardIdx]);\n  }\n}\n","<a (click)=\"play()\"><img src=\"{{ src() }}\" class=\"movecard\"/></a>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Color } from '../game';\nimport { ImageService } from '../image.service';\n\n@Component({\n  selector: 'app-color-picker-dialog',\n  templateUrl: './color-picker-dialog.component.html',\n  styleUrls: ['./color-picker-dialog.component.css']\n})\nexport class ColorPickerDialogComponent implements OnInit {\n  @Input() colors: Color[];\n  colorPickerFormGroup: FormGroup;\n  Color = Color;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private imageService: ImageService\n  ) {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.colorPickerFormGroup = this.formBuilder.group({\n      color: ['', [Validators.required]]\n    });\n  }\n\n  public submitForm() {\n    this.activeModal.close(this.colorPickerFormGroup.value);\n  }\n\n  turtleSrc(color: Color): string {\n    return this.imageService.getTurtlePath(color);\n  }\n\n  ngOnInit() {}\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Wybierz żółwia</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<form [formGroup]=\"colorPickerFormGroup\" (ngSubmit)=\"submitForm()\">\n  <div class=\"modal-body\">\n    <div class=\"container\">\n      <p>Którego żółwia chcesz przesunąć?</p>\n      <div class=\"form-row\">\n        <div *ngFor=\"let color of colors\" class=\"col\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"color\"\n            id=\"{{ color }}\"\n            value=\"{{ color }}\"\n            formControlName=\"color\"\n            required\n          />\n          <label class=\"form-check-label\" for=\"{{ color }}\"\n            ><img style=\"width: 80%;\" src=\"{{ turtleSrc(color) }}\"\n          /></label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" [disabled]=\"!colorPickerFormGroup.valid\">\n      OK\n    </button>\n  </div>\n</form>\n","import { Game, Color, Card, ALL_CARDS } from './game';\n\nexport class GameEngine {\n  static createGame(players: string[]): Game {\n    if (players.length < 2) {\n      console.log('too few players');\n      return;\n    }\n    if (players.filter((item, index) => players.indexOf(item) !== index).length > 0) {\n      console.log(\"names can't repeat\");\n      return;\n    }\n    const turtles = [Color.BLUE, Color.GREEN, Color.PURPLE, Color.RED, Color.YELLOW];\n    GameEngine.shuffle(turtles);\n    const deck = Array.from(ALL_CARDS.keys()); // shallow copy\n    GameEngine.shuffle(deck);\n\n    const playersToTurtles: { [id: string]: Color } = {};\n    players.forEach((player) => (playersToTurtles[player] = turtles.pop()));\n    const playersToHands: { [id: string]: number[] } = {};\n    players.forEach((player) => (playersToHands[player] = deck.splice(0, 5)));\n\n    return {\n      id: undefined,\n      players,\n      colors: playersToTurtles,\n      hands: playersToHands,\n      deck,\n      discarded: [],\n      board: [[Color.RED, Color.GREEN, Color.PURPLE, Color.YELLOW, Color.BLUE], [], [], [], [], [], [], [], [], []],\n      last_move: undefined,\n      active_player: 0,\n      winner: undefined,\n      next_game_id: undefined,\n    };\n  }\n\n  static defineColors(game: Game, cardIdx: number): Color[] {\n    const color = ALL_CARDS[cardIdx].color;\n    switch (color) {\n      case Color.BLUE:\n      case Color.GREEN:\n      case Color.PURPLE:\n      case Color.RED:\n      case Color.YELLOW:\n        const fieldAndPos = GameEngine.findPosition(game, color);\n        if (fieldAndPos[0] === 0 && ALL_CARDS[cardIdx].distance < 0) {\n          console.log(`Can't move back ${color}`);\n          return [];\n        }\n        return [color];\n      case Color.ANY:\n        let colors = [Color.BLUE, Color.GREEN, Color.PURPLE, Color.RED, Color.YELLOW];\n        if (ALL_CARDS[cardIdx].distance < 0) {\n          colors = colors.filter((c) => game.board[0].indexOf(c) === -1);\n        }\n        return colors;\n      case Color.LAST:\n        return [...game.board.find((f) => f.length > 0)];\n    }\n    throw new Error(`Unsupported color ${color}`);\n  }\n\n  // color should be well defined\n  static playCard(game: Game, cardIdx: number, color: Color) {\n    if (game.winner) {\n      throw new Error(`Can't play anymore, ${game.winner} has won`);\n    }\n    GameEngine.makeMove(game, ALL_CARDS[cardIdx].distance, color);\n    GameEngine.useCard(game, cardIdx);\n    GameEngine.reshuffleIfNecessary(game);\n    // tslint:disable-next-line: no-unused-expression\n    GameEngine.gameOver(game) || GameEngine.nextPlayer(game);\n    console.log(game);\n  }\n\n  static makeMove(game: Game, distance: number, color: Color) {\n    const fieldAndPos = GameEngine.findPosition(game, color);\n    const field = fieldAndPos[0];\n    const pos = fieldAndPos[1];\n\n    // On start turtles are not stacked\n    const stackSize = field === 0 ? 1 : game.board[field].length - pos;\n    // We can't jump out of the board\n    const landingField = Math.min(field + distance, game.board.length - 1);\n    if (landingField < 0) {\n      throw new Error(`Can't go back, already on the first field`);\n    }\n    const landingPos = game.board[landingField].length;\n\n    const stack = game.board[field].splice(pos, stackSize);\n    game.board[landingField] = game.board[landingField].concat(stack);\n\n    console.log(`moved ${stackSize} from ${field} to ${landingField}`);\n    console.log(game);\n    game.last_move = { color, start: fieldAndPos, end: [landingField, landingPos] };\n  }\n\n  static useCard(game: Game, cardIdx: number) {\n    const player = game.players[game.active_player];\n    console.log(player);\n    // TODO map vs dict\n    const handIdx = game.hands[player].findIndex((i) => i === cardIdx);\n    if (handIdx === -1) {\n      throw new Error(`Invalid move, ${ALL_CARDS[cardIdx]} not found for ${player}`);\n    }\n    game.discarded.push(game.hands[player].splice(handIdx, 1)[0]);\n    game.hands[player].push(game.deck.pop());\n  }\n\n  static reshuffleIfNecessary(game: Game): boolean {\n    if (game.deck.length === 0) {\n      game.deck = game.discarded;\n      GameEngine.shuffle(game.deck);\n      game.discarded = [];\n      return true;\n    }\n    return false;\n  }\n\n  static gameOver(game: Game): boolean {\n    if (game.board[game.board.length - 1].length === 0) {\n      return false;\n    }\n    for (let field = game.board.length - 1; field >= 0; field--) {\n      for (const color of game.board[field]) {\n        const player: string = Object.keys(game.colors).find((p) => game.colors[p] === color);\n        if (player) {\n          game.winner = player;\n          console.log(`${player} won!`);\n          return true;\n        }\n      }\n    }\n    throw new Error(`Invalid board, reached last field but no winner found`);\n  }\n\n  static nextPlayer(game: Game) {\n    game.active_player = (game.active_player + 1) % game.players.length;\n  }\n\n  static findPosition(game: Game, color: Color) {\n    let field = 0;\n    let pos = 0;\n    for (field = 0; field < game.board.length; field++) {\n      for (pos = 0; pos < game.board[field].length; pos++) {\n        if (game.board[field][pos] === color) {\n          return [field, pos];\n        }\n      }\n    }\n    console.log(game);\n    throw new Error(`Invalid board, ${color} not found`);\n  }\n\n  static shuffle<T>(a: T[]): T[] {\n    for (let i = a.length; i; i--) {\n      const j = Math.floor(Math.random() * i);\n      const x = a[i - 1];\n      a[i - 1] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Color } from '../game';\nimport { ImageService } from '../image.service';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrls: ['./game-over.component.css']\n})\nexport class GameOverComponent implements OnInit {\n  @Input() winner: string;\n  @Input() color: Color;\n\n  constructor(public activeModal: NgbActiveModal, private imageService: ImageService) {}\n\n  ngOnInit() {}\n\n  turtleCardSrc(): string {\n    return this.imageService.getTurtleCardPath(this.color);\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Koniec gry</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p>Wygrał {{ winner }}!</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\"></div>\n      <div class=\"col-4\">\n        <img src=\"{{ turtleCardSrc() }}\" class=\"turtlecard\" />\n      </div>\n      <div class=\"col\"></div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-secondary\" (click)=\"activeModal.close('onemore')\">\n      Jeszcze raz!\n    </button>\n    <button class=\"btn btn-primary\" (click)=\"activeModal.close('OK')\">\n      OK\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, timer, Subject, EMPTY, throwError } from 'rxjs';\nimport { catchError, map, tap, switchMap, distinctUntilChanged, shareReplay } from 'rxjs/operators';\n\nimport { Game, Color } from './game';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  // private gamesUrl = 'https://turtles-server--piotrholubowicz.repl.co/games/'; // URL to web api\n  private gamesUrl = 'https://turtles-server.herokuapp.com/games'; // URL to web api\n  private cache: { [url: string]: string } = {}; // url => etag\n\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private http: HttpClient) {}\n\n  /** GET games from the server */\n  getGames(): Observable<Game[]> {\n    const url = this.gamesUrl;\n    delete this.cache[url];\n    return timer(0, 1000).pipe(\n      switchMap((_) => this.fetchUrl<Game[]>(url, 'getGames')), // a new http request on every tick\n      shareReplay({\n        bufferSize: 1,\n        refCount: true,\n      }) // create a new Subject, which will act as a proxy\n    );\n  }\n\n  /** GET game by id. Will 404 if id not found */\n  getGame(id: number): Observable<Game> {\n    const url = `${this.gamesUrl}/${id}`;\n    delete this.cache[url];\n    return timer(0, 1000).pipe(\n      switchMap((_) => this.fetchUrl<Game>(url, `getGame id=${id}`)), // a new http request on every tick\n      shareReplay({\n        bufferSize: 1,\n        refCount: true,\n      }) // create a new Subject, which will act as a proxy\n    );\n  }\n\n  fetchUrl<T>(url: string, operation: string): Observable<T> {\n    const headers = this.cache[url] ? this.headers.set('If-None-Match', this.cache[url]) : this.headers;\n    return this.http\n      .get<T>(url, { observe: 'response', headers })\n      .pipe(\n        tap((resp) => (this.cache[url] = resp.headers.get('Etag'))),\n        map((resp) => resp.body),\n        catchError(this.handleError<T>(operation))\n      );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new game to the server */\n  addGame(game: Game, currentGame?: Game): Observable<Game> {\n    const url = currentGame ? `${this.gamesUrl}?prevGame=${currentGame.id}` : this.gamesUrl;\n    return this.http\n      .post<Game>(url, game, { headers: this.headers })\n      .pipe(\n        tap((newGame: Game) => console.log(`added game w/ id=${newGame.id}`)),\n        tap((g: Game) => console.log(g)),\n        catchError(this.handleError<Game>('addGame'))\n      );\n  }\n\n  /** DELETE: delete the game from the server */\n  deleteGame(game: Game | number): Observable<Game> {\n    const id = typeof game === 'number' ? game : game.id;\n    const url = `${this.gamesUrl}/${id}`;\n\n    return this.http\n      .delete<Game>(url, { headers: this.headers })\n      .pipe(\n        tap((_) => console.log(`deleted game id=${id}`)),\n        catchError(this.handleError<Game>('deleteHero'))\n      );\n  }\n\n  /** PUT: update the game on the server */\n  updateGame(game: Game): Observable<any> {\n    const url = `${this.gamesUrl}/${game.id}`;\n    console.log(game);\n    return this.http.put(url, game, { headers: this.headers }).pipe(\n      tap((_) => console.log(`updated game id=${game.id}`)),\n      catchError(this.handleError<any>('updateGame'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param fallback - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', fallback: Observable<T> = EMPTY) {\n    return (error: any): Observable<T> => {\n      if (error.status === 304) {\n        // This is working as intended\n        return fallback;\n      }\n      console.error(error); // log to console instead\n      console.log(`${operation} failed: ${error.message}`);\n      delete this.cache[error.url];\n      return throwError(error);\n    };\n  }\n}\n","export enum Color {\n  BLUE,\n  GREEN,\n  PURPLE,\n  RED,\n  YELLOW,\n  LAST,\n  ANY,\n}\n\nexport interface Card {\n  distance: number; // 1-2\n  color: Color;\n}\n\nexport interface Move {\n  color: Color;\n  start: number[];\n  end: number[];\n}\n\nexport interface Game {\n  id: number;\n  players: string[];\n  colors: { [id: string]: Color };\n  hands: { [id: string]: number[] };\n  deck: number[];\n  discarded: number[];\n  board: Color[][];\n  last_move: Move;\n  active_player: number;\n  winner: string;\n  next_game_id: number;\n}\n\nexport const ALL_CARDS = [\n  { distance: 1, color: Color.BLUE },\n  { distance: 1, color: Color.BLUE },\n  { distance: 1, color: Color.BLUE },\n  { distance: 1, color: Color.BLUE },\n  { distance: 1, color: Color.BLUE },\n  { distance: 2, color: Color.BLUE },\n  { distance: -1, color: Color.BLUE },\n  { distance: -1, color: Color.BLUE },\n\n  { distance: 1, color: Color.GREEN },\n  { distance: 1, color: Color.GREEN },\n  { distance: 1, color: Color.GREEN },\n  { distance: 1, color: Color.GREEN },\n  { distance: 1, color: Color.GREEN },\n  { distance: 2, color: Color.GREEN },\n  { distance: -1, color: Color.GREEN },\n  { distance: -1, color: Color.GREEN },\n\n  { distance: 1, color: Color.PURPLE },\n  { distance: 1, color: Color.PURPLE },\n  { distance: 1, color: Color.PURPLE },\n  { distance: 1, color: Color.PURPLE },\n  { distance: 1, color: Color.PURPLE },\n  { distance: 2, color: Color.PURPLE },\n  { distance: -1, color: Color.PURPLE },\n  { distance: -1, color: Color.PURPLE },\n\n  { distance: 1, color: Color.RED },\n  { distance: 1, color: Color.RED },\n  { distance: 1, color: Color.RED },\n  { distance: 1, color: Color.RED },\n  { distance: 1, color: Color.RED },\n  { distance: 2, color: Color.RED },\n  { distance: -1, color: Color.RED },\n  { distance: -1, color: Color.RED },\n\n  { distance: 1, color: Color.YELLOW },\n  { distance: 1, color: Color.YELLOW },\n  { distance: 1, color: Color.YELLOW },\n  { distance: 1, color: Color.YELLOW },\n  { distance: 1, color: Color.YELLOW },\n  { distance: 2, color: Color.YELLOW },\n  { distance: -1, color: Color.YELLOW },\n  { distance: -1, color: Color.YELLOW },\n\n  { distance: 1, color: Color.ANY },\n  { distance: 1, color: Color.ANY },\n  { distance: 1, color: Color.ANY },\n  { distance: 1, color: Color.ANY },\n  { distance: 1, color: Color.ANY },\n  { distance: -1, color: Color.ANY },\n  { distance: -1, color: Color.ANY },\n\n  { distance: 1, color: Color.LAST },\n  { distance: 1, color: Color.LAST },\n  { distance: 1, color: Color.LAST },\n  { distance: 2, color: Color.LAST },\n  { distance: 2, color: Color.LAST },\n];\n","import { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { GameService } from '../game.service';\nimport { Game } from '../game';\nimport { GameEngine } from '../game-engine';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css'],\n})\nexport class GamesComponent implements OnInit {\n  games$: Observable<Game[]>;\n  message: string;\n\n  constructor(private service: GameService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.games$ = this.route.paramMap.pipe(\n      switchMap((params) => {\n        this.message = params.get('message');\n        return this.service.getGames();\n      })\n    );\n  }\n\n  add(playersInput: string[]): void {\n    const players = playersInput.filter((input) => input !== '').map((input) => input.trim());\n    const game: Game = GameEngine.createGame(players);\n    if (game) {\n      this.service.addGame(game).subscribe();\n    }\n  }\n\n  delete(game: Game): void {\n    this.service.deleteGame(game).subscribe();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <a href=\"/\"><img src=\"/assets/img/title.png\" /></a>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <p>Wybierz istniejącą grę lub stwórz nową.</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <div class=\"col-10\">\n          <h2>Istniejące gry</h2>\n          <div *ngIf=\"(games$ | async)?.length > 0; else noGames\">\n            <div\n              *ngFor=\"let game of games$ | async\"\n              class=\"btn-group\"\n              role=\"group\"\n              style=\"width: 100%; margin-top: 5%;\"\n            >\n              <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">{{ game.id }}</div>\n              </div>\n              <button type=\"button\" class=\"btn btn-light game\" [routerLink]=\"['/board', game.id]\" style=\"width: 80%;\">\n                {{ game.players.join(', ') }}\n              </button>\n              <button type=\"button\" class=\"btn btn-secondary\" title=\"delete game\" (click)=\"delete(game)\">x</button>\n            </div>\n          </div>\n          <ng-template #noGames>\n            <p>Nie ma gier.</p>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <h2>Nowa gra</h2>\n      <form>\n        <div class=\"form-group row\">\n          <label class=\"col-2 col-form-label\">Gracz 1</label>\n          <div class=\"col-10\">\n            <input class=\"form-control\" #player1 />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-2 col-form-label\">Gracz 2</label>\n          <div class=\"col-10\">\n            <input class=\"form-control\" #player2 />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-2 col-form-label\">Gracz 3</label>\n          <div class=\"col-10\">\n            <input class=\"form-control\" #player3 />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-2 col-form-label\">Gracz 4</label>\n          <div class=\"col-10\">\n            <input class=\"form-control\" #player4 />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-2 col-form-label\">Gracz 5</label>\n          <div class=\"col-10\">\n            <input class=\"form-control\" #player5 />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <!-- (click) passes input value to add() and then clears the input -->\n          <button\n            type=\"submit\"\n            class=\"btn btn-light\"\n            (click)=\"\n              add([player1.value, player2.value, player3.value, player4.value, player5.value]);\n              player1.value = '';\n              player2.value = '';\n              player3.value = '';\n              player4.value = '';\n              player5.value = ''\n            \"\n          >\n            Nowa gra\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <h2>Reguły</h2>\n    </div>\n  </div>\n</div>\n\n<!-- <div *ngIf=\"message\" class=\"alert alert-warning\">{{ message }}</div> -->\n","import { Injectable } from '@angular/core';\n\nimport { Card, Color } from './game';\n\n@Injectable()\nexport class ImageService {\n  private PREFIX = '/assets/img';\n  // private PREFIX = 'https://raw.githubusercontent.com/piotrholubowicz/turtles/master/src/assets/img';\n\n  constructor() {}\n\n  getMoveCardPath(card?: Card): string {\n    if (!card) {\n      return `${this.PREFIX}/card-back.png`;\n    }\n    const color = Color[card.color].toLowerCase();\n    const sign = card.distance === -1 ? 'minus' : card.distance === 2 ? 'plusplus' : 'plus';\n    return `${this.PREFIX}/card-${color}-${sign}.png`;\n  }\n\n  getTurtleCardPath(color?: Color): string {\n    const which = color !== undefined ? Color[color].toLowerCase() : 'back';\n    return `${this.PREFIX}/turtle-card-${which}.png`;\n  }\n\n  getTurtlePath(color: Color): string {\n    return `${this.PREFIX}/meeple-${Color[color].toLowerCase()}.png`;\n  }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Game } from './game';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const games = [];\n    console.log('created the db');\n    return { games };\n  }\n\n  // Overrides the genId method to ensure that a game always has an id.\n  // If the games array is empty, the method below returns the initial number (11).\n  // If the games array is not empty, the method below returns the highest\n  // game id + 1.\n  genId(games: Game[]): number {\n    return games.length > 0 ? Math.max(...games.map(game => game.id)) + 1 : 100;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <a href=\"/\"><img src=\"/assets/img/title.png\"/></a>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      Ups, nic tu nie ma!\n    </div>\n  </div>\n</div>\n","import { Observable, of, merge, timer } from 'rxjs';\nimport { switchMap, catchError, tap } from 'rxjs/operators';\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Game, Color, ALL_CARDS } from '../game';\nimport { GameService } from '../game.service';\nimport { GameEngine } from '../game-engine';\nimport { ImageService } from '../image.service';\nimport { ColorPickerDialogComponent } from '../color-picker-dialog/color-picker-dialog.component';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css'],\n})\nexport class PlayerComponent implements OnInit {\n  game$: Observable<Game>;\n  turtleCardSrc$: Observable<string>;\n  player: string;\n  ColorT = Color;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: GameService,\n    private modalService: NgbModal,\n    private imageService: ImageService\n  ) {}\n\n  ngOnInit(): void {\n    this.game$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.player = params.get('player');\n        return this.service.getGame(+params.get('id')).pipe(\n          tap((game) => {\n            if (game.next_game_id) {\n              this.router.navigate(['/hand', game.next_game_id, this.player]);\n            }\n          }),\n          catchError((err) => {\n            if (err.status === 404) {\n              this.router.navigate(['/games', { message: 'Nie ma takiej gry!' }]);\n            }\n            console.log(`Error ${err.status}`);\n            return this.game$;\n          })\n        );\n      })\n    );\n    this.turtleCardSrc$ = of(this.turtleCardSrc());\n  }\n\n  onPlayed(event: any) {\n    const colorOptions: Color[] = GameEngine.defineColors(event.game, event.cardIdx);\n    if (colorOptions.length === 0) {\n      this.cantPlayCard();\n    } else if (colorOptions.length > 1) {\n      this.pickOneColor(colorOptions)\n        .then((result) => {\n          this.playTheCard(event.game, event.cardIdx, +result.color);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      this.playTheCard(event.game, event.cardIdx, colorOptions[0]);\n    }\n  }\n\n  cantPlayCard() {}\n\n  pickOneColor(colorOptions: Color[]): Promise<any> {\n    const modalRef = this.modalService.open(ColorPickerDialogComponent);\n    modalRef.componentInstance.colors = colorOptions;\n    return modalRef.result;\n  }\n\n  playTheCard(game: Game, cardIdx: number, color: Color) {\n    GameEngine.playCard(game, cardIdx, color);\n    console.log(`${this.player} plays ${JSON.stringify(ALL_CARDS[cardIdx])}`);\n    this.service.updateGame(game).subscribe();\n  }\n\n  turtleCardSrc(color?: Color): string {\n    return this.imageService.getTurtleCardPath(color);\n  }\n\n  showTurtleCard(color: Color) {\n    this.turtleCardSrc$ = merge(\n      of(this.turtleCardSrc(color)),\n      timer(2000).pipe(switchMap((_) => of(this.turtleCardSrc())))\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <a href=\"/\"><img src=\"/assets/img/title.png\" /></a>\n    </div>\n  </div>\n  <div *ngIf=\"game$ | async as game\">\n    <div class=\"row top-row\">\n      <div class=\"col-10\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <p class=\"players\">\n              <span *ngFor=\"let p of game.players\" [ngClass]=\"{ active_player: game.players[game.active_player] == p }\"\n                >{{ p }}<span *ngIf=\"player == p\"> (Ty)</span>,\n              </span>\n            </p>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\"></div>\n          <div class=\"col-3\">\n            <img src=\"/assets/img/gameover.png\" *ngIf=\"game.winner; else yourturn\" class=\"img-fluid\" />\n            <ng-template #yourturn>\n              <img\n                src=\"/assets/img/yourturn.png\"\n                *ngIf=\"player == game.players[game.active_player]\"\n                class=\"img-fluid\"\n              />\n            </ng-template>\n          </div>\n          <div class=\"col\"></div>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <img src=\"{{ turtleCardSrc$ | async }}\" (click)=\"showTurtleCard(game.colors[player])\" class=\"turtlecard\" />\n        <p class=\"turtlecard\">Kliknij mnie</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngFor=\"let card of game.hands[player]\" class=\"col\">\n        <app-card\n          [cardIdx]=\"card\"\n          [game]=\"game\"\n          [enabled]=\"game.players[game.active_player] == player\"\n          (played)=\"onPlayed($event)\"\n        ></app-card>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}